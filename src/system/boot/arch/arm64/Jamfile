SubDir HAIKU_TOP src system boot arch arm64 ;

local platform ;

local kernelArchSources =
	arch_elf.cpp
	arch_uart_pl011.cpp
;

local kernelGenericDriverSources =
    debug_uart.cpp
    debug_uart_8250.cpp
;

kernelLibGenericSources =
	memcpy.c
	memset.c
;

local kernelLibArchSources = ;

local librootOsArchSources =
	byteorder.S
;

for platform in [ MultiBootSubDirSetup efi ] {
	on $(platform) {
		DEFINES += _BOOT_MODE ;


		BootMergeObject [ FGristFiles boot_arch_$(TARGET_KERNEL_ARCH).o ] :
			$(kernelGenericDriverSources)
			$(kernelArchSources)
			$(kernelLibArchSources)
			$(kernelLibGenericSources)
			$(librootOsArchSources)
			arch_cpu.cpp
			: # additional flags
		;

		SEARCH on [ FGristFiles $(kernelArchSources) ]
			= [ FDirName $(HAIKU_TOP) src system kernel arch arm64 ] ;
		SEARCH on [ FGristFiles $(kernelGenericDriverSources) ]
			= [ FDirName $(HAIKU_TOP) src system kernel arch generic ] ;
		SEARCH on [ FGristFiles $(kernelLibGenericSources) ]
			= [ FDirName $(HAIKU_TOP) src system libroot posix string arch generic ] ;
		SEARCH on [ FGristFiles $(kernelLibArchSources) ]
			= [ FDirName $(HAIKU_TOP) src system libroot posix string arch arm64 ] ;
		SEARCH on [ FGristFiles $(librootOsArchSources) ]
			= [ FDirName $(HAIKU_TOP) src system libroot os arch arm64 ] ;
	}
}
